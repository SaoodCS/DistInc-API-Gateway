name: Firebase Microservices CI/CD

on:
  push:
    branches:
      - prod
      - dev

jobs:
  api-gateway-ci-cd:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Phase - Checkout repository
      uses: actions/checkout@v2

    - name: Setup Phase - Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.18.1'

    - name: Setup Phase - Install dependencies in functions directory
      run: |
        cd functions
        npm install

    - name: CI Phase - Run ESLint & End Workflow If Any Linting Errors
      run: npm run lint-ts || exit 1
    
    - name: CI Phase - Run Tests & End Workflow If Tests Fail
      run: npm run test || exit 1

    - name: CD Phase - Install Firebase CLI
      run: npm install -g firebase-tools

    - name: CD Phase - Deploy to Dev Env If Pushed To Dev Branch
      if: github.ref == 'refs/heads/dev'
      env:
        DEV_SA_KEY: ${{ secrets.DEV_SA_KEY }}
        DEV_ENV_VARIABLES: ${{ secrets.DEV_ENV_VARIABLES }}
      run: |
        echo "$DEV_ENV_VARIABLES" > .env
        echo "$DEV_SA_KEY" > /tmp/service_account.json
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/service_account.json
        firebase deploy --only functions:apiGateway --project [dev-project-id] 

    - name: CD Phase - Deploy to Prod Env If Pushed To Prod Branch
      if: github.ref == 'refs/heads/prod'
      env:
        PROD_SA_KEY: ${{ secrets.PROD_SA_KEY }}
        PROD_ENV_VAR: ${{ secrets.PROD_ENV_VARIABLES }}
      run: |
        echo "$PROD_ENV_VAR" > .env
        echo "$PROD_SA_KEY" > /tmp/service_account.json
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/service_account.json
        firebase deploy --only functions:apiGateway --project [prod-project-id] 